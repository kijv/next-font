name: Release

on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'Semver increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
          - alpha
          - beta
          - canary
      dry_run:
        description: 'Dry run (do not actually release)'
        required: false
        default: false
        type: boolean
      packages:
        description: 'Packages to release (space-separated)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  stage:
    name: Stage
    runs-on: ubuntu-latest
    outputs:
      stage_branch: ${{ steps.prepare-branch.outputs.STAGE_BRANCH }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Configure Git
        run: |
          git config --global user.name vvv
          git config --global user.email vvv@vvv.org

      - name: Prepare branch
        id: prepare-branch
        run: |
          PACKAGES=$(echo "${{ github.event.inputs.packages }}" | tr ' ' '-')
          git checkout -b release-$PACKAGES
          echo "STAGE_BRANCH=$(git branch --show-current)" >> $GITHUB_OUTPUT

      - name: Release packages
        run: |
          if [ -z "${{ github.event.inputs.packages }}" ]; then
            echo "No packages selected for release"
            exit 1
          fi

          ARGS="${{ github.event.inputs.packages }} --bump --semver ${{ github.event.inputs.semver }}"

          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            ARGS="$ARGS --dry-run"
          fi

          bun xtask workspace $ARGS

      - name: Stage
        run: |
          git push origin ${{ steps.prepare-branch.outputs.STAGE_BRANCH }} --tags

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: stage
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ needs.stage.outputs.stage_branch }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.VVV_NPM_TOKEN }}" > .npmrc

      - name: Publish
        run: |
          ARGS="--publish"
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            ARGS="$ARGS --dry-run"
          fi
          bun xtask workspace $ARGS
        env:
          NPM_TOKEN: ${{ secrets.VVV_NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

  pull-request:
    name: Pull Request
    runs-on: ubuntu-latest
    needs: stage
    if: github.event.inputs.dry_run == 'false'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ needs.stage.outputs.stage_branch }}

      - name: Configure Git
        run: |
          git config --global user.name vvv
          git config --global user.email vvv@vvv.org

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@master
        if: ${{ !inputs.dry_run }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: ${{ needs.stage.outputs.stage_branch }}
          base: main
          title: "release npm packages"

name: Release (New)

env:
  NODE_LTS_VERSION: 22
  BUN_VERSION: "1.2.19"

on:
  # Run every day at 23:15 UTC
  # TODO: Disabled cron for now, but uncomment
  # once replaced the old release workflow.
  # schedule:
  #   - cron: '15 23 * * *'
  # Run manually
  workflow_dispatch:
    inputs:
      releaseType:
        description: Release Type
        required: true
        type: choice
        # Cron job will run canary release
        default: canary
        options:
          - canary
          - stable
          - release-candidate

      force:
        description: Forced Release
        default: false
        type: boolean

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  # To create PR
  pull-requests: write

jobs:
  version:
    if: github.repository_owner == 'kijv'
    runs-on: ubuntu-latest
    environment: release-${{ github.event.inputs.releaseType }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - name: Clone repository
        run: git clone https://github.com/kijv/next-font.git --depth=25 --single-branch --branch ${GITHUB_REF_NAME:-main} .

      - name: Check token
        run: gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get commit of the latest tag
        run: echo "LATEST_TAG_COMMIT=$(git rev-list -n 1 $(git describe --tags --abbrev=0))" >> $GITHUB_ENV

      - name: Get latest commit
        run: echo "LATEST_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Check if new commits since last tag
        if: ${{ github.event.inputs.releaseType != 'stable' && github.event.inputs.force != true }}
        run: |
          if [ "$LATEST_TAG_COMMIT" = "$LATEST_COMMIT" ]; then
            echo "No new commits. Exiting..."
            exit 1
          fi

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Ensure Bun
        run: bun --version

      - run: bun install
      - run: bun run build

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          version: bun run ci:version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TYPE: ${{ github.event.inputs.releaseType }}

  build:
    # Don't trigger this job on `pull_request` events from upstream branches.
    # Those would already run this job on the `push` event
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    needs:
      - version
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - run: bun install
      - run: bun run build

      - uses: actions/cache@v4
        timeout-minutes: 5
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

  publish:
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs:
      - version
      - build
    permissions:
      contents: write
      id-token: write
    env:
      NPM_TOKEN: ${{ secrets.VVV_NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - uses: actions/cache@v4
        timeout-minutes: 5
        id: restore-build
        with:
          path: ./*
          # Cache includes repo checkout which is required for later scripts
          fail-on-cache-miss: true
          key: ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}
          restore-keys: |
            ${{ github.sha }}-${{ github.run_number }}
            ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

      # Restoring the cache can overwrite the checkout's stored credentials.
      # Reconfigure git to use the workflow token for any pushes/tags.
      - name: Restore Git credentials
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      # New release process
      - name: Publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun run ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.VVV_NPM_TOKEN }}

      - name: Upload npm log artifact
        if: steps.changesets.outputs.published == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: npm-publish-logs
          path: /home/runner/.npm/_logs/*
